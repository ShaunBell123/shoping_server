name: Deploy to Staging EC2

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.0

      - name: Terraform Init
        run: terraform init
        working-directory: terraform/main

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: terraform/main

      - name: Get Terraform outputs
        run: |
          echo "EC2_ID=$(terraform output -raw ec2_id)" >> $GITHUB_ENV
          echo "REDIS_HOST=$(terraform output -raw redis_endpoint)" >> $GITHUB_ENV
        working-directory: terraform/main

      - name: Archive app folders
        run: |
          tar czf app.tar.gz java python docker-compose.yml

      - name: Deploy via SSM
        run: |
          aws ssm send-command \
            --targets "Key=instanceIds,Values=${{ env.EC2_ID }}" \
            --document-name "AWS-RunShellScript" \
            --parameters 'commands=[
              "mkdir -p /home/ubuntu/app",
              "cd /home/ubuntu/app",
              "cat > app.tar.gz << EOF",
              "'"$(base64 app.tar.gz)"'",
              "EOF",
              "tar xzf app.tar.gz",
              "echo REDIS_HOST=${REDIS_HOST} > .env",
              "echo REDIS_PORT=6379 >> .env",
              "echo REDIS_SSL=True >> .env",
              "docker-compose up --build -d"
            ]'
